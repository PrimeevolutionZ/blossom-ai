import asyncio
from blossom_ai import AsyncBlossom, BlossomError

# –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω, –µ—Å–ª–∏ –µ—Å—Ç—å (–æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –∞—É–¥–∏–æ –∏ nologo)
API_TOKEN = "nwMWyfBzIpPQRdkr"  # –∏–ª–∏ "–≤–∞—à_—Ç–æ–∫–µ–Ω_–∑–¥–µ—Å—å"


async def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
    async_ai = AsyncBlossom(api_token=API_TOKEN, timeout=60)

    try:
        print("üöÄ –¢–µ—Å—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...")
        image_path = await async_ai.image.save(
            prompt="a cyberpunk cat wearing neon sunglasses",
            filename="test_image.jpg",
            width=512,
            height=512,
            model="flux"
        )
        print(f"‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {image_path}")

        print("\nüìù –¢–µ—Å—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞...")
        try:
            # –ü—Ä–æ—Å—Ç–æ–π –∫–æ—Ä–æ—Ç–∫–∏–π –ø—Ä–æ–º–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∞
            text_response = await async_ai.text.generate(
                prompt="Hello"
            )
            print(f"‚úÖ –¢–µ–∫—Å—Ç (–ø—Ä–æ—Å—Ç–æ–π): {text_response}")

            # –î–æ–±–∞–≤–∏–º –∑–∞–¥–µ—Ä–∂–∫—É –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ (rate limit = 3 —Å–µ–∫—É–Ω–¥—ã)
            await asyncio.sleep(3)

            # –¢–µ–ø–µ—Ä—å –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–π –ø—Ä–æ–º–ø—Ç –ë–ï–ó –¢–û–ß–ö–ò –í –ö–û–ù–¶–ï
            text_response = await async_ai.text.generate(
                prompt="Explain async programming in one sentence",  # –£–±—Ä–∞–ª–∏ —Ç–æ—á–∫—É!
                model="openai"
            )
            print(f"‚úÖ –¢–µ–∫—Å—Ç (—Å–ª–æ–∂–Ω—ã–π): {text_response}")

        except BlossomError as e:
            print(f"‚ö†Ô∏è GET endpoint –æ—à–∏–±–∫–∞: {e.message}")
            print("   –ü—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ POST chat endpoint...")

            try:
                # –ü–æ–ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ chat API (POST endpoint)
                await asyncio.sleep(3)
                text_response = await async_ai.text.chat(
                    messages=[
                        {"role": "user", "content": "Explain async programming"}
                    ]
                )
                print(f"‚úÖ –¢–µ–∫—Å—Ç (—á–µ—Ä–µ–∑ POST chat): {text_response}")
            except Exception as e2:
                print(f"‚ö†Ô∏è POST endpoint —Ç–æ–∂–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {e2}")

        print("\nüéôÔ∏è –¢–µ—Å—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞—É–¥–∏–æ...")
        if API_TOKEN:
            audio_path = await async_ai.audio.save(
                text="Hello from asynchronous Blossom AI!",
                filename="test_audio.mp3",
                voice="nova"
            )
            print(f"‚úÖ –ê—É–¥–∏–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {audio_path}")
        else:
            print("‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ: —Ç—Ä–µ–±—É–µ—Ç—Å—è API_TOKEN –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞—É–¥–∏–æ")

        # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–∏—Å–∫–∞ –≥–æ–ª–æ—Å–æ–≤ –∏ –º–æ–¥–µ–ª–µ–π
        print("\nüìã –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–∞—Ö...")
        voices = await async_ai.audio.voices()
        print(f"‚ÑπÔ∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –≥–æ–ª–æ—Å–∞: {voices}")

        try:
            models = await async_ai.text.models()
            print(f"‚ÑπÔ∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –º–æ–¥–µ–ª–∏: {models}")
        except BlossomError as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π: {e.message}")

        try:
            image_models = await async_ai.image.models()
            print(f"‚ÑπÔ∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {image_models}")
        except BlossomError as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {e.message}")

    except BlossomError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Blossom: {e.message}")
        print(f"üí° –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ: {e.suggestion}")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        # –í—Å–µ–≥–¥–∞ –∑–∞–∫—Ä—ã–≤–∞–π—Ç–µ —Å–µ—Å—Å–∏—é!
        await async_ai.close()
        print("\nüîí –°–µ—Å—Å–∏—è –∑–∞–∫—Ä—ã—Ç–∞.")


if __name__ == "__main__":
    asyncio.run(main())